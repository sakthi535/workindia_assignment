Hey there, Mr. X. You have been appointed to design a railway management system like IRCTC, where users can come on the platform
and check if there are any trains available between 2 stations.
The app will also display how many seats are available between any 2 stations and the user can book a seat if the availability > 0 after
logging in. Since this has to be real-time and multiple users can book seats simultaneously, your code must be optimized enough to handle
large traffic and should not fail while doing any bookings.
If more than 1 users simultaneously try to book seats, only either one of the users should be able to book. Handle such race conditions
while booking.

Station 
Train  
User



Register a User
Create an endpoint for registering a user.

[POST] /api/signup
Request Data : {
"username": "example_user",
"password": "example_password",
"email": "user@example.com"
}
Response Data : {
"status": "Account successfully created",
"status_code": 200,
"user_id": "123445"
}

2. Login User
Provide the ability to the user to log into his account

3. Add a New Train
An endpoint for the admin to create a new train with a source and destination

4. Get Seat Availability
Create an endpoint for the users where they can enter the source and destination and fetch all the trains between that route with their
availabilities
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
[POST] /api/login
Request Data : {
"username": "example_user",
"password": "example_password"
}
For successful login
Response Data : {
"status": "Login successful",
"status_code": 200,
"user_id": "12345",
"access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
}
For failure
Response Data: {
"status": "Incorrect username/password provided. Please retry",
"status_code": 401
}

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
[POST] /api/trains/create
Request Data : {
"train_name": "Express Train",
"source": "Station A",
"destination": "Station B",
"seat_capacity": 100,
"arrival_time_at_source": "14:00:00",
"arrival_time_at_destination": "20:30:00"
}
Response Data : {
"message": "Train added successfully",
"train_id": "9876543210"
}

1
2
3
4
5
6
7
8
9
10
11
[GET] /api/trains/availability?source=SOURCE&destination=DESTINATION
Request Data : {}
Params: {
"source": str
"destination": str
}
Response Data : [
{

5. Book a Seat
Create an endpoint for the users to book a seat on a particular train

6. Get Specific Booking Details
Create an endpoint for the users to book a seat on a particular train

Mandatory requirement:
1. You need to protect all the admin API endpoints with an API key that will be known only to you and the admin so that no one can add
false data to your system.
2. For booking a seat and getting specific booking details, you need to send the Authorization Token received in the login endpoint.